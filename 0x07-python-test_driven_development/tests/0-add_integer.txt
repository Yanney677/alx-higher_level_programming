
This module defines an integer addition function ``add_integer(a, b=98)``

``add_integer(...)``` returns the addition of the two arguments. For numbers,
that value is equivalent to using the ``+`` operator.

::

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(1, 4)
    5

::

    >>> add_integer(9, -10)
    -1

Working with floating-point values.

::

    >>> add_integer(2.5, 3.0)
    5

Floats casted to integers before addition function are called.

::

    >>> add_integer(1.9, 1.2)
    2

::

    >>> add_integer(-1.9, -1.2)
    -2

Floating and non-floating point values can be combined.

::

    >>> add_integer(-4.3, 3)
    -1

The second argument is optional - by default, it is 98.

::

    >>> add_integer(2)
    100

Expections
===========

``add_integer()`` expects that both arguments are either integers or floats.
If either argument is a non-integer and non-float, a TypeError is raised:

::

    >>> add_integer("School", 3)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(2, "School")
    Traceback (most recent call last):
    TypeError: b must be an integer

::

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(3.3, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

If both arguments are non-integers and non-floats, a TypeError message is only
printed for the first argument.

::

    >>> add_integer("School", "Best")
    Traceback (most recent call last):
    TypeError: a must be an integer

The function will fail if infinity is provided.

::

    >>> add_integer(float('fin'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
     

::

    >>> add_integer(2, float('fin'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

And again with NaNa numbers.

::

    >>> add_integer(float('nana'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaNa to integer

::

    >>> add_integer(3, float('nana'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaNa to integer
