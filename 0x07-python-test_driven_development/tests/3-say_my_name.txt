
This modules defines a function ``say_my_name(first_name, last_name="")``.

Solve
=====

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Ama", "Nyamekye")
    My name is Ama Nyamekye

::

    >>> say_my_name("John Kofi", "Mensah")
    My name is John Kofi Mensah

The parameter ```last_name``` is optional. Otherwise,
an empty string is printed instead.

::

    >>> say_my_name("Ama")
    My name is Ama 

Expections 
=============

Parameters of ``first_name`` and ``last_name``` must be strings. Otherwise,
a TypeError is raised.

::

    >>> say_my_name(7, "John")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Mark", ["Cave", "Bakershot", "Heater"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"MacBron": 7, "Fames": 32}, 8.7)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

Condition: at least one name must be provided.

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
